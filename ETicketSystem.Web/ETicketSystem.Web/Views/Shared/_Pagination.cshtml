@model PaginationViewModel

<div class="container-fluid text-center">
    <ul class="pagination">
        <li class="page-item @(1 == Model.CurrentPage ? "blocked":string.Empty)">
            <a class="page-link" asp-controller="@Model.Controller" asp-action="@Model.Action" asp-route-page="@Model.PreviousPage" asp-route-searchTerm="@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : Model.SearchTerm)">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active blocked":string.Empty)">
                <a class="page-link" asp-controller="@Model.Controller" asp-action="@Model.Action" asp-route-page="@i" asp-route-searchTerm="@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : Model.SearchTerm)">@i</a>
            </li>
        }
        <li class="page-item @(Model.TotalPages == Model.CurrentPage ? "blocked":string.Empty)">
            <a class="page-link" asp-controller="@Model.Controller" asp-action="@Model.Action" asp-route-page="@Model.NextPage" asp-route-searchTerm="@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : Model.SearchTerm)">Next</a>
        </li>
    </ul>
</div>